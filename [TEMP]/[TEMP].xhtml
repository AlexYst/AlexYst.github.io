<?xml version="1.0" encoding="utf-8"?>
<!--
                                                                                     
 h       t     t                ::       /     /                     t             / 
 h       t     t                ::      //    //                     t            // 
 h     ttttt ttttt ppppp sssss         //    //  y   y       sssss ttttt         //  
 hhhh    t     t   p   p s            //    //   y   y       s       t          //   
 h  hh   t     t   ppppp sssss       //    //    yyyyy       sssss   t         //    
 h   h   t     t   p         s  ::   /     /         y  ..       s   t    ..   /     
 h   h   t     t   p     sssss  ::   /     /     yyyyy  ..   sssss   t    ..   /     
                                                                                     
	<https://y.st./>
	Copyright ©  Alex Yst <mailto:copyright@y.st>

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program. If not, see <https://www.gnu.org./licenses/>.
-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<base href="https://y.st./[TEMP]/[TEMP].xhtml"/>
		<title>Planning for neostats &lt;https://y.st./[TEMP]/[TEMP].xhtml&gt;</title>
		<link rel="icon" type="image/png" href="/link/CC_BY-SA_4.0/y.st./icon.png"/>
		<link rel="stylesheet" type="text/css" href="/link/main.css"/>
		<script type="text/javascript" src="/script/javascript.js"/>
		<meta name="viewport" content="width=device-width"/>
	</head>
	<body>
<nav>
</nav>
		<header>
			<h1>Planning for <code>neostats</code></h1>
			<p></p>
		</header>
<section id="drudgery">
	<h2>Drudgery</h2>
	<p>
		My discussion post for the day:
	</p>
	<blockquote>
		<h3>Script output</h3>
		<p>
			The code we were given to work with already output everything we were supposed to have it output, and the only line of code we had to edit at all last week was the line specifying where on the filesystem the corpus was.
			Between that and the fact that the corpus was also given to us, all of us should have had identical output from our scripts.
			For reference, and because this discussion assignment asks us to include our output, all of us should have had output that looks identical to this:
		</p>
<blockquote>
<pre>yst@bailey:~$ python /home/yst/Downloads/indexer.py
Processing Start Time: 13:46
Documents 570
Tokens 36637
Terms 5796
Processing End Time: 13:46
yst@bailey:~$</pre>
</blockquote>
		<h3>Equation</h3>
		<p>
			As mentioned in the discussion topic, <var>M</var> = <var>k</var><var>T</var><sup><var>ß</var></sup>, where <var>M</var> is an estimation of the size of the vocabulary (in other words, the number of unique terms) and <var>T</var> is the number of tokens in the processed documents.
			<var>k</var> and <var>ß</var> must be found through empirical analysis and are specific to the set of documents (Manning, Raghaven, &amp; Schütze, 2009), so as we haven&apos;t yet covered how to estimate these two, values of 40 and 0.5 will be used, respectively.
			Plugging all that in, our equation is <var>M</var> = 40×36637<sup>0.5</sup>, where <var>M</var> should be about equal to 5796.
			We actually get a value of about 7656.31765276 though, not 5796.
			So why could that be?
		</p>
		<h3>Possible conclusions</h3>
		<p>
			The simplest conclusion is quite often the correct solution.
			We didn&apos;t build the code wrong, because we didn&apos;t build the code at all.
			This is likely the same code that&apos;s been used term after term, and though experience has told me otherwise, we should be able to assume that the school would have updated the code to include corrections had there been an issue, as previous students would have reported it.
			If the problem isn&apos;t the code then, the problem would be our values of <var>k</var> and <var>ß</var>.
			Because these values are specific to the set of documents indexed, it&apos;s reasonable and likely correct to believe that we just need different numbers.
			For example, if we use the provided <var>ß</var> but change <var>k</var> to 30, we get an <var>M</var> value of about 5742.23823957, which is much closer.
			Likewise, if we use the provided <var>k</var> value and change <var>ß</var> to be 0.47, we get an <var>M</var> value of about 5586.01820107.
			By changing both values and/or using more-precise decimal values, we could get even better solutions than these two even.
		</p>
		<p>
			That answer is a bit boring though.
			We need better numbers?
			I think there are other things we can consider as well.
		</p>
		<p>
			One possibility is that the indexer should be modified to ignore certain types of tokens instead of putting them into the index.
			For example, the files that we feed the indexer seem to be hypertext markup.
			Checking the index, we can see <abbr title="Hypertext Markup Language">HTML</abbr> tags that ended up getting stored and associated with documents.
			Those tags are a part of the documents, sure, but they&apos;re not a part of the <strong>*content*</strong> of the documents.
			If we were building an indexer for actual use in the wild, it should run the files through some sort of parser/virtual renderer first to extract the actual content of the page.
			This process would involve stripping tags, substituting entity codes with actual characters, and things such as that.
			Once the actual content was produced, that content would then be fed into the tokeniser instead of the raw contents of the files.
			Another quirk I see in the index is that strange, useless tokens that are actually present in the content of the page are being indexed.
			For example, one token that got indexed was an equal sign.
			Do we really need that in the index?
			Are we going to actually search for documents that contain equal signs surrounded by whitespace?
			Other odd tokens such as times, integers, and things starting with an open parenthesis or ending in a closing parenthesis are likewise indexed but unlikely to ever be used, not to mention that by counting a partly-parenthesised item as a separate token, it ensures that the instance won&apos;t be properly counted among the instances of the non-parenthesised search term.
			For an example script for use for learning, this script is just what we need.
			Such advanced features would make it harder for us to see how the script works so we wouldn&apos;t learn as easily.
			However, it&apos;s easy to see why not having these advanced features would throw the statistics and the estimation out of sync with one another.
		</p>
		<div class="APA_references">
			<h3>References:</h3>
			<p>
				Manning, C. D., Raghaven, P., &amp; Schütze, H.
				(2009).
				<a href="https://nlp.stanford.edu/IR-book/pdf/05comp.pdf">Introduction to Information Retrieval</a>.
				Retrieved from <code>https://nlp.stanford.edu/IR-book/pdf/05comp.pdf</code>
			</p>
		</div>
	</blockquote>
</section>
<section id="Minetest">
	<h2>Minetest</h2>
	<img src="/img/CC_BY-SA_3.0/minetest.net./weblog/2020/07/03.png" alt="A lavafall in the way of a temporary railway in my mine" class="framed-centred-image" width="1024" height="600"/>
	<img src="/img/CC_BY-SA_4.0/y.st./weblog_map/2020/07/03.png" alt="The world map" class="framed-centred-image" width="921" height="912"/>
	<p>
		I looked into Minimal&apos;s code to see whether Minimal uses the old grass-grows-everywhere-if-there&apos;s-enough-light mechanic or instead grass spreads from nearby grassy areas.
		Which style of grass-growing is present is critical for the backport of farm plants, as I can&apos;t set the game up to require crops to be planted on bare dirt without grass if grass is going to pop up no matter what you do if the area is bright enough for crops to grow.
		I couldn&apos;t find anything in the code that should grow the grass at all though, using either method.
		What the Squid?
	</p>
	<p>
		So I started setting up a test area.
		I planned to set up an eleven-by-nine area of just bare dirt, then set the game aside for a few hours and see if any grass actually grew.
		After placing only eleven of the dirt nodes, grass had already sprung up on one of them.
		That was a relief.
		I was worried that the grass-growning mechanic had been lost from Minimal, which would make dirt one of the canonical drops of <code>liblevelup</code>.
		I was worried I&apos;d need to track down exactly which version the feature had been lost in, in order to insert the drop into the correct spot on the official list, then go about fixing my main game world.
		As that drop should have been present all along, I&apos;d need to grow a bunch of grassy dirt to replace the grassy dirt I&apos;ve removed, then add a lack of grass-spreading to <code>retrodrops</code>.
		It was going to be an time-consuming to repair the lack of dirt drops I&apos;d gotten from already having removed all the grass in my world, but more than that, it was going to be annoying having grass never grow in my world again, only being available just after map generation.
	</p>
	<p>
		Anyway, it seems I somehow opened the wrong file, and that&apos;s why I couldn&apos;t find the grass-growing mechanic.
		Speaking of which, the code makes it clear that the old, non-spreading mechanic is used, so planting beds cannot be expected to remain grass-free.
	</p>
</section>
		<hr/>
		<p>
			Copyright ©  Alex Yst;
			You may modify and/or redistribute this document under the terms of the <a rel="license" href="/license/gpl-3.0-standalone.xhtml"><abbr title="GNU&apos;s Not Unix">GNU</abbr> <abbr title="General Public License version Three or later">GPLv3+</abbr></a>.
			If for some reason you would prefer to modify and/or distribute this document under other free copyleft terms, please ask me via email.
			My address is in the source comments near the top of this document.
			This license also applies to embedded content such as images.
			For more information on that, see <a href="/en/a/licensing.xhtml">licensing</a>.
		</p>
		<p>
			<abbr title="World Wide Web Consortium">W3C</abbr> standards are important.
			This document conforms to the <a href="https://validator.w3.org./nu/?doc=https%3A%2F%2Fy.st.%2F%5BTEMP%5D%2F%5BTEMP%5D.xhtml"><abbr title="Extensible Hypertext Markup Language">XHTML</abbr> 5.2</a> specification and uses style sheets that conform to the <a href="http://jigsaw.w3.org./css-validator/validator?uri=https%3A%2F%2Fy.st.%2F%5BTEMP%5D%2F%5BTEMP%5D.xhtml"><abbr title="Cascading Style Sheets">CSS</abbr>3</a> specification.
		</p>
	</body>
</html>

