<?xml version="1.0" encoding="utf-8"?>
<!--
                                                                                     
 h       t     t                ::       /     /                     t             / 
 h       t     t                ::      //    //                     t            // 
 h     ttttt ttttt ppppp sssss         //    //  y   y       sssss ttttt         //  
 hhhh    t     t   p   p s            //    //   y   y       s       t          //   
 h  hh   t     t   ppppp sssss       //    //    yyyyy       sssss   t         //    
 h   h   t     t   p         s  ::   /     /         y  ..       s   t    ..   /     
 h   h   t     t   p     sssss  ::   /     /     yyyyy  ..   sssss   t    ..   /     
                                                                                     
	<https://y.st./>
	Copyright Â© 2019 Alex Yst <mailto:copyright@y.st>

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program. If not, see <https://www.gnu.org./licenses/>.
-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<base href="https://y.st./[TEMP]/[TEMP].xhtml"/>
		<title>class::knn() &lt;https://y.st./[TEMP]/[TEMP].xhtml&gt;</title>
		<link rel="icon" type="image/png" href="/link/CC_BY-SA_4.0/y.st./icon.png"/>
		<link rel="stylesheet" type="text/css" href="/link/main.css"/>
		<script type="text/javascript" src="/script/javascript.js"/>
		<meta name="viewport" content="width=device-width"/>
	</head>
	<body>
<nav>
</nav>
		<header>
			<h1>class::knn()</h1>
			<p>Written in <span title="Data Mining and Machine Learning">CS 4407</span> by <a href="https://y.st./">Alexand(er|ra) Yst</a>, finalised on 2019-02-27</p>
		</header>
<section id="Unit4">
	<h2>Unit 4</h2>
	<p>
		This week&apos;s reading assignment was more sections in the <abbr title="PHP: Hypertext Preprocessor">PHP</abbr> manual.
		Oddly, the text of the link said <code>index.php</code>, though the actual target of the link was <code>install.php</code>.
		I&apos;ve already read the manual front to back though, aside from the sections regarding each and every specific function; class; and constant the language has to offer.
		I tend to look up the functions I need for a given project, and ignore the rest.
		I just don&apos;t have enough room in my brain to store all the functions.
		I can&apos;t even remember the functions I&apos;ve used, and have to look those ones up again too to get their exact usage before calling them in my code.
	</p>
	<p>
		The <abbr title="PHP: Hypertext Preprocessor">PHP</abbr> tutorial lessons we&apos;re completing this week as our main assignment said that <abbr title="PHP: Hypertext Preprocessor">PHP</abbr> arrays are always indexed from zero.
		I find it very annoying when arrays are indexed from one; it makes it difficult for me to work in the language, as I&apos;m always assuming an initial index of zero, and it leads to bugs when that assumption proves to be false.
		<abbr title="PHP: Hypertext Preprocessor">PHP</abbr> arrays aren&apos;t actually <strong>*always*</strong> indexed from zero though.
		When using an array, you can set any arbitrary key you like.
		In this way, they&apos;re more like tables from other languages.
		However, <abbr title="PHP: Hypertext Preprocessor">PHP</abbr> arrays also have an order, which is independent of the order of numeric keys.
		Instead, the order is determined by the order the keys get added to the array, until such a time that an array-sorting function is run to clean up that mess.
		If you don&apos;t choose a key to assign a value to, <abbr title="PHP: Hypertext Preprocessor">PHP</abbr> starts assigning numeric keys automatically.
		If no non-negative integer keys have been used in the array yet, the key <code>0</code> gets assigned.
		If any non-negative integer keys <strong>*have*</strong> been assigned, <abbr title="PHP: Hypertext Preprocessor">PHP</abbr> assigns a key equal to the highest integer key that has ever been used in the array, regardless of whether that key is still in use, incremented by one.
		That means that if you never assign keys and you never remove key/value pairs from the array, your array will be indexed from zero.
		However, if you remove key/value pairs (for example: <code>unset(<var>$var</var>[5]);</code>) or sometimes use specific integer keys, your array will have holes in it.
		And if you assign an initial integer key greater than negative two, your array will be indexed from that.
		(Assigning a key of negative one still results in a continuous chain of integer keys because <abbr title="PHP: Hypertext Preprocessor">PHP</abbr> assigns zero as the next key regardless of what negative number you used, and negative one just happens to be the integer just before zero.
		So by coincidence, it actually works.)
		So by these mechanics, you can index arrays from one, or from five, or from seven hundred two.
		<abbr title="PHP: Hypertext Preprocessor">PHP</abbr> will allow all of these options.
		That said, I don&apos;t recommend doing that.
		Indexing from zero just makes everything easier.
		Just don&apos;t make the invalid claim that <abbr title="PHP: Hypertext Preprocessor">PHP</abbr> arrays are <strong>*always*</strong> indexed from zero.
	</p>
	<p>
		It&apos;s interesting that the lesson made a point of specifically telling us that multidimensional arrays can have as many dimensions as you like.
		Most languages don&apos;t have true multidimensional array support.
		(I&apos;ve only seen one language with true multidimensional array support, and I think that was R.)
		Instead, what most languages offer is nested arrays.
		<abbr title="PHP: Hypertext Preprocessor">PHP</abbr> is one of these languages.
		Semantically, as long as you nest your arrays the same depth on every branch, it makes no difference.
		You&apos;ve got yourself a multidimensional array that you constructed out of single-dimensional arrays.
		Mechanically though, this does make a difference.
		If a multidimensional array is just an array whose values happen to be arrays themselves, each of those arrays can likewise be arrays.
		There&apos;s no limit to depth, because the arrays at each depth are treated no differently than the arrays at any other depth.
		There&apos;s no &quot;depth-three&quot; arrays, as far as the language and the interpreter are concerned.
		As for accessing the elements, the syntax used just selects the an element from the array at depth zero, then selects an element from that array, and so on.
		There&apos;s no limit to the number of selections made, so you can properly access values across as many dimensions as you need to.
		To put it simply, the lesson is completely correct in the assessment that you can build and use arrays of any (positive) number of dimensions, but it&apos;s a bizarre thing for the lesson to point out.
		Likewise, the lesson points out that you can chain together as many <code>elseif</code> statements as you want.
		Like arrays too, you can nest <code>if</code> statements arbitrarily deep.
	</p>
	<p>
		I appreciated the exercise in which we filled in the blanks for the gender code.
		In my other course this term, we recently had an example in storing binary values, and the example used gender.
		As an individual of non-binary gender, I found that annoying.
		I actually use the name Alexand(er|ra), in the style of a regular expression, as my name in informal writing.
		Legally, I&apos;m just Alex.
		I have no need for a gendered name such as Alexander, Alexandra, Alexandria, Alexa, or Alexia.
		However, the lesson in this course had us complete code that offered &quot;other&quot; as an option.
		Not everyone fits into a binary box, and I appreciate when people don&apos;t try to shove a round peg like me into either a square or triangular hole.
		I just don&apos;t fit.
	</p>
	<p>
		In the discussion assignment, one of the other students asked me about how my pre-compiled webpages are implemented.
		It was fun to explain it, then go back into my code so I could link to the relevant parts.
		Like <abbr title="deoxyribonucleic acid">DNA</abbr>, the code&apos;s a bit of a mess due to the way it has evolved over time, but it shows that <abbr title="PHP: Hypertext Preprocessor">PHP</abbr>&apos;s use in regards to webpages isn&apos;t limited to writing scripts that get run to build the pages every time a user requests them.
		Pages can be pre-built, sort of making the result like a cache, so they don&apos;t have to be rebuilt every time.
	</p>
</section>
<section id="Unit4">
	<h2>Unit 4</h2>
	<p>
		I struggled with the unit assignment last week.
		I just didn&apos;t understand what it was asking for at times.
		And when I did understand what was asked of us, I sometimes didn&apos;t know what the best way to accomplish the goal was.
		So it was helpful to get to read the answer key when grading other students&apos; work this week.
		One of the things I tend to do is compare my own work to the answer key, as if to grade that as well.
		I don&apos;t do it every time, but I do it when either I struggled with the assignment or I see something in the answer key that I don&apos;t remember doing in my own work.
	</p>
	<p>
		The reading assignment for this week is the following:
	</p>
	<ul>
		<li>
			<a href="https://rstudio-pubs-static.s3.amazonaws.com/316172_a857ca788d1441f8be1bcd1e31f0e875.html">kNN(k-Nearest Neighbour) Algorithm in R</a>
		</li>
		<li>
			<a href="https://ww2.coastal.edu/kingw/statistics/R-tutorials/logistic.html">R Tutorials--Logistic Regression</a>
		</li>
		<li>
			Chapter Four of <a href="https://www-bcf.usc.edu/~gareth/ISL/ISLR%20First%20Printing.pdf">Driver.dvi - ISLR First Printing.pdf</a>
		</li>
	</ul>
	<p>
		Ugh.
		My power and Internet connection went out on me on the day I finally had time to get to the reading assignment.
		It&apos;s been a busy week.
		Thankfully, I&apos;d already loaded the above pages in my Web browser on day zero, so I was able to read them even without an Internet connection, as my laptop&apos;s battery slowly drained.
		I feared I might not be able to complete my unit assignment though, even having three days left, due to the lack of power and connection.
		Thankfully, I&apos;d gotten everything in both my courses done on day zero, save for my reading assignment in this course, discussion assignment in both courses, and unit assignment for this course completed.
		Both discussions were well under way by this point in the week, so really all I needed to do was wait and make my daily posts.
		All I had left to really focus on were the unit assignment for this course and the reading assignment that would make the unit assignment understandable.
		I normally keep my lights off during the day, but I turned one on just so I&apos;d notice when the power came back on.
		It really didn&apos;t take as long as I&apos;d feared.
	</p>
	<p>
		The k-nearest neighbour algorithm seems pretty simple.
		I mean, if you were to implement it, it might get complex because you&apos;d need to work with programming circles and whatnot, which would require use of complex formulas and pi, then detecting what points fell into the circle, what size your circle needed to be, and a bunch more.
		Or maybe not.
		If you cycled through every single data point, you could simply calculate the distance away from the prospective data point and use the Pythagorean theorem.
		Then just pick the data points with the lowest resulting numbers, as they&apos;d be the nearest neighbours.
		The article calls the distance calculated this way the &quot;Euclidean distance&quot;, but the formula given is clearly the Pythagorean theorem, so you only really need middle school maths to figure out the distance.
		Instead of the Euclidean distance, the article says the Hamming distance is used in some cases, but no explanation of what that is is given.
		But anyway, the concept is rather simple.
		It&apos;s a classification problem, but it&apos;s clearly a case of supervised learning, not unsupervised learning.
		You&apos;ve got your training set, and you use it to get the computer to make educated guesses about unclassified data points.
		I would assume the new data points get added to the training set, but that&apos;d taint the training data with guesses, so maybe not.
	</p>
	<p>
		To use the k-nearest neighbour algorithm, you obviously need to decide on a value for <var>k</var>.
		Apparently, this value is normally set to the square root of the number of available data points in the training set.
		It&apos;s not really explained why this is, but I guess it offers a good balance between taking too little into account and taking too much into account.
		If too few neighbours are used, trends in the data won&apos;t really be considered.
		If too many are used, it&apos;s basically just a popularity contest between data point types.
		Another thing mentioned is that to prevent one property of the data points from getting weighed more heavily than the other, some sort of scaling should be used on all the data points&apos; properties.
		That would be where the min-max scaling and z-scores from the discussion assignment come in.
	</p>
	<p>
		Speaking of the discussion assignment, for whatever reason, we were limited in how long our responses could be this week.
		On the one hand, writing less meant I couldn&apos;t go into details really.
		I felt like I hardly wrote anything, yet I only came out four words under the limit.
		On the other hand, it made my job easier.
		I&apos;ve got a lot that needs to get done each week, so keeping the discussion post in this course down to a minimum saved me time and effort.
	</p>
	<p>
		The article also says the k-nearest neighbour algorithm is slow and doesn&apos;t always give much insight.
		I guess I can see that.
		If we&apos;re looping over all the training data each time, that&apos;d really slow down our implementation.
		As for lack of insight, guesses at the classification of new data points doesn&apos;t seem very helpful in many cases.
		I can see it having potential for some tasks though.
		This is a course on data mining, and the phrase &quot;data mining&quot; has a very negative connotation for me, so please excuse my negative example.
		But if you&apos;ve creepily recorded data on past customers and want to classify who might buy a different product you offer, you might classify customers as having bought or not bought your item, then use it to figure out if it&apos;s worth it to try to advertise that item to a pending customer before they finalise their order.
		And if not, try that same thing with another product, and so on, until you figure out which product you should try to obnoxiously up-sell to them.
	</p>
	<p>
		The unit assignment was much easier than last week&apos;s.
		There was a bit of trial and error involved, but the intent of what was wanted was clear, and I built my solutions to meet the goals.
		Last week, I didn&apos;t really understand what the assignment was getting at, most likely meaning I hadn&apos;t absorbed the material for that week even close to as well as I should have.
		I learned some useful techniques while trying to format my assignment, too.
		I found data points can be made invisible on a graph in R, and that labels can be added right where the data points would be if visible.
		This allows, for example, for different symbols to be used to represent different types of data points.
	</p>
</section>
		<hr/>
		<p>
			Copyright Â© 2019 Alex Yst;
			You may modify and/or redistribute this document under the terms of the <a rel="license" href="/license/gpl-3.0-standalone.xhtml"><abbr title="GNU&apos;s Not Unix">GNU</abbr> <abbr title="General Public License version Three or later">GPLv3+</abbr></a>.
			If for some reason you would prefer to modify and/or distribute this document under other free copyleft terms, please ask me via email.
			My address is in the source comments near the top of this document.
			This license also applies to embedded content such as images.
			For more information on that, see <a href="/en/a/licensing.xhtml">licensing</a>.
		</p>
		<p>
			<abbr title="World Wide Web Consortium">W3C</abbr> standards are important.
			This document conforms to the <a href="https://validator.w3.org./nu/?doc=https%3A%2F%2Fy.st.%2F%5BTEMP%5D%2F%5BTEMP%5D.xhtml"><abbr title="Extensible Hypertext Markup Language">XHTML</abbr> 5.2</a> specification and uses style sheets that conform to the <a href="http://jigsaw.w3.org./css-validator/validator?uri=https%3A%2F%2Fy.st.%2F%5BTEMP%5D%2F%5BTEMP%5D.xhtml"><abbr title="Cascading Style Sheets">CSS</abbr>3</a> specification.
		</p>
	</body>
</html>

