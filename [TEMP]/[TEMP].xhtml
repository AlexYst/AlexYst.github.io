<?xml version="1.0" encoding="utf-8"?>
<!--
                                                                                     
 h       t     t                ::       /     /                     t             / 
 h       t     t                ::      //    //                     t            // 
 h     ttttt ttttt ppppp sssss         //    //  y   y       sssss ttttt         //  
 hhhh    t     t   p   p s            //    //   y   y       s       t          //   
 h  hh   t     t   ppppp sssss       //    //    yyyyy       sssss   t         //    
 h   h   t     t   p         s  ::   /     /         y  ..       s   t    ..   /     
 h   h   t     t   p     sssss  ::   /     /     yyyyy  ..   sssss   t    ..   /     
                                                                                     
	<https://y.st./>
	Copyright Â© 2019-2020 Alex Yst <mailto:copyright@y.st>

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program. If not, see <https://www.gnu.org./licenses/>.
-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<base href="https://y.st./[TEMP]/[TEMP].xhtml"/>
		<title>Learning Journal &lt;https://y.st./[TEMP]/[TEMP].xhtml&gt;</title>
		<link rel="icon" type="image/png" href="/link/CC_BY-SA_4.0/y.st./icon.png"/>
		<link rel="stylesheet" type="text/css" href="/link/main.css"/>
		<script type="text/javascript" src="/script/javascript.js"/>
		<meta name="viewport" content="width=device-width"/>
	</head>
	<body>
<nav>
</nav>
		<header>
			<h1>Learning Journal</h1>
			<p>CS 4404: Advanced Networking and Data Security</p>
		</header>
<section id="Unit1">
	<h2>Unit 1</h2>
	<p>
		The <abbr title="Transmission Control Protocol">TCP</abbr>/<abbr title="Internet Protocol">IP</abbr> protocol suite was developed by a pair of scientists at <abbr title="Defense Advanced Research Projects Agency">DARPA</abbr> - then known as <abbr title="Advanced Research Projects Agency">ARPA</abbr> - for use on a new network called the <abbr title="Advanced Research Projects Agency Network">ARPANET</abbr>.
		The <abbr title="Advanced Research Projects Agency Network">ARPANET</abbr> would later be repurposed and built into the public Internet that we know and use today, and much of the core technology in use then is still in use today.
		One of those components we still use is the <abbr title="Transmission Control Protocol">TCP</abbr>/<abbr title="Internet Protocol">IP</abbr> suite, which carries pretty much all our traffic that we need reliably delivered.
		In early 1973, those two scientists - Vint Cerf and Bob Kahn - built the original <abbr title="Transmission Control Protocol">TCP</abbr> used on the <abbr title="Advanced Research Projects Agency Network">ARPANET</abbr>.
		These days, &quot;<abbr title="Transmission Control Protocol">TCP</abbr>&quot; stands for &quot;Transmission Control Protocol&quot;, but it didn&apos;t always.
		Originally, <abbr title="Transmission Control Protocol">TCP</abbr> was the Transmission Control Program, which can still be seen in <abbr title="Request for Comments">RFC</abbr> 675, the <abbr title="Request for Comments">RFC</abbr> document later written to standardise <abbr title="Transmission Control Protocol">TCP</abbr> by the end of next year (History-Computer.com, n.d.).
		I&apos;m having trouble finding any information on when <abbr title="Internet Protocol">IP</abbr> came into being or why, but from the looks of it, <abbr title="Transmission Control Protocol">TCP</abbr> didn&apos;t depend on it originally.
		As best I can tell, <abbr title="Internet Protocol">IP</abbr>&apos;s functionality was just built into <abbr title="Transmission Control Protocol">TCP</abbr>.
		However, in 1981 September, <abbr title="Internet Protocol">IP</abbr> was finally defined in its first <abbr title="Request for Comments">RFC</abbr>, making it officially standardised (Information Sciences Institute, 1981).
	</p>
	<div class="APA_references">
		<h3>References:</h3>
		<p>
			History-Computer.com. (n.d.). <a href="https://history-computer.com/Internet/Maturing/TCPIP.html">TCP/IP - Complete History of the TCP/IP Protocol Suite</a>. Retrieved from <code>https://history-computer.com/Internet/Maturing/TCPIP.html</code>
		</p>
		<p>
			Information Sciences Institute. (1981, September). <a href="https://tools.ietf.org/html/rfc791">RFC 791 - Internet Protocol</a>. Retrieved from <code>https://tools.ietf.org/html/rfc791</code>
		</p>
	</div>
</section>
<section id="Unit2">
	<h2>Unit 2</h2>
	<p>
		On the link layer, <abbr title="media access control">MAC</abbr> addresses are used.
		However, on the network layer, <abbr title="Internet Protocol">IP</abbr> addresses are used.
		This means that an application on a host trying to reach another host has to pass the relevant <abbr title="Internet Protocol">IP</abbr> address to the adjacent network layer on the sending host, as the application layer isn&apos;t allowed to communicate with the link layer directly, but the network layer isn&apos;t able to pass that <abbr title="Internet Protocol">IP</abbr> address on to the link layer.
		Instead, once the network layer knows the <abbr title="Internet Protocol">IP</abbr> address of the node at the end of the next network hop, the network layer has to figure out that node&apos;s <abbr title="media access control">MAC</abbr> address.
		To do this, it uses <abbr title="Address Resolution Protocol">ARP</abbr>.
		<abbr title="Address Resolution Protocol">ARP</abbr> can only resolve <abbr title="Internet Protocol">IP</abbr> addresses of nodes on the same <abbr title="local area network">LAN</abbr> or subnet.
		This is fine though, as the link layer can&apos;t communicate outside the <abbr title="local area network">LAN</abbr> or subnet anyway, and the network layer has to pass information from subnet to subnet through nodes that sit on the boarder between <abbr title="local area network">LAN</abbr>s and subnets.
		To convert an <abbr title="Internet Protocol">IP</abbr> address to a <abbr title="media access control">MAC</abbr> address, a host first checks its <abbr title="Address Resolution Protocol">ARP</abbr> table, which is essentially a cache of translated addresses.
		If the address isn&apos;t available there, it broadcasts an <abbr title="Address Resolution Protocol">ARP</abbr> request to all nodes on the subnet, basically asking them if the <abbr title="Internet Protocol">IP</abbr> address belongs to them.
		The <abbr title="Address Resolution Protocol">ARP</abbr> request contains the <abbr title="media access control">MAC</abbr> address of the node that sent the broadcast request, so if any node does in fact have that <abbr title="Internet Protocol">IP</abbr> address, it knows where to send its response to.
		Assuming a node is using that <abbr title="Internet Protocol">IP</abbr> address, it sends a response containing its <abbr title="media access control">MAC</abbr> address to the host that performed the query.
		If such a response arrives, the requester then puts that address pair - the <abbr title="media access control">MAC</abbr> address and <abbr title="Internet Protocol">IP</abbr> address - in its <abbr title="Address Resolution Protocol">ARP</abbr> table so the request won&apos;t have to be performed again until the entry expires (Marsic, 2013).
	</p>
	<div class="APA_references">
		<h3>References:</h3>
		<p>
			Marsic, I. (2013, June 11). <a href="https://www.ece.rutgers.edu/~marsic/books/CN/book-CN_marsic.pdf">Computer Networks: Performance and Quality of Service</a>. Retrieved from <code>https://www.ece.rutgers.edu/~marsic/books/CN/book-CN_marsic.pdf</code>
		</p>
	</div>
</section>
<section id="Unit3">
	<h2>Unit 3</h2>
	<p>
		Multimedia traffic is network traffic used to deliver video, audio, images, and other non-text data.
		Honestly, it can be rather problematic.
		It&apos;s bulkier than plain-text documents, such as <abbr title="Extensible Hypertext Markup Language">XHTML</abbr>.
		That means that it hogs bandwidth and can easily cause network congestion.
		Special compression techniques have been developed to compress multimedia traffic because of how much of an impact it has (Rango, Tropea, &amp; Fazio, 2010), though in my experience, that&apos;s not even always enough, nor does it tackle multimedia&apos;s other problems.
		It&apos;s also a pain to get information from.
		When I&apos;m looking for information, I find it to be an absolute pain if I can&apos;t find a plain text version of the information and have to resort to watching a video.
		You can&apos;t skim videos for the parts you need or use control + &quot;f&quot; to search through them.
		You pretty much have to watch through them until you&apos;ve found the relevant part.
		Even if you plan to read an entire article, listening to someone read said article is slower than reading it yourself.
		Listening is slower than reading.
		Furthermore, I often have trouble making out what people say, and it doesn&apos;t help that they sometimes mumble.
		I sometimes have to replay the same few seconds of a video repeatedly before I can make out what&apos;s been said, and sometimes, I can&apos;t even make it out then and have to give up on that information entirely.
	</p>
	<div class="APA_references">
		<h3>References:</h3>
		<p>
			Rango, F. D., Tropea, M., &amp; Fazio, P. (2010, February 1). <a href="https://www.intechopen.com/books/digital-video/multimedia-traffic-over-wireless-and-satellite-networks">Multimedia Traffic over Wireless and Satellite Networks | IntechOpen</a>. Retrieved from <code>https://www.intechopen.com/books/digital-video/multimedia-traffic-over-wireless-and-satellite-networks</code>
		</p>
	</div>
</section>
<section id="Unit4">
	<h2>Unit 4</h2>
	<p>
		Policing is an interesting way to deal with network consistency, as seen by applications.
		Each particular network flow is allowed only to send a certain number of packets within a certain time frame, regardless of what resources are available (Marsic, 2013).
		Each data flow is given an allowable peak rate, an allowable average rate, and an allowable burst rate.
		Its connection is throttled to the point where it is not allowed to exceed any of these.
		What this means is that while network conditions will appear more stable to applications, the traffic flow will be artificially limited, and the network will often times be underutilised.
	</p>
	<p>
		I&apos;m not sure I understand the leaky bucket analogy, as told by the textbook.
		In the textbook&apos;s analogy, permission for packets to be sent on the network is represented by tokens placed in a leaky bucket.
		The packets wait, and they each receive a token as it drips out.
		There&apos;s also a separate queue that packets wait in to receive the tokens, and if the queue is full, the packets are simply dropped (Marsic, 2013).
		Assuming I understand the idea of policing correctly, I think a better analogy would be to say the packets would go into the bucket, not permission tokens.
		The steady dripping out of the bucket would represent packets getting their turn to be sent over the network.
		On the other hand, if the bucket - which now represents the queue - is full, newly-arriving packets spill out, and are dropped instead of being sent.
		Perhaps this analogy is equally flawed though; liquid doesn&apos;t work that way.
		The newly-arriving liquid wouldn&apos;t be guaranteed to be the liquid to be dropped, and it&apos;d usually be a mix of new and old liquid that spills.
		Still, it seems like the permission tokens were not only an unnecessary abstraction shoehorned into the analogy, but also don&apos;t really add to it in any way.
	</p>
	<p>
		The textbook specifically discussed using this sort of technique for dealing with jitter in multimedia applications (Marsic, 2013).
		What this example shows us is that such applications need consistency more than they need throughput, which I find to be incredibly bizarre.
		These applications perform better with less resources!
		I would think that they&apos;d make the most of what they have when they have it, but the problem is they don&apos;t seem to be able to adapt properly to changing network conditions.
		A better option for them is to throttle the connection and let data simply drip through at an even rate.
	</p>
	<div class="APA_references">
		<h3>References:</h3>
		<p>
			Marsic, I. (2013, June 11). <a href="https://www.ece.rutgers.edu/~marsic/books/CN/book-CN_marsic.pdf">Computer Networks: Performance and Quality of Service</a>. Retrieved from <code>https://www.ece.rutgers.edu/~marsic/books/CN/book-CN_marsic.pdf</code>
		</p>
	</div>
</section>
<section id="Unit5">
	<h2>Unit 5</h2>
	<p>
		The learning journal assignment for the week is to discus an application for virtual reality that we see beneficial.
		That assumes that we <strong>*do*</strong> see virtual reality as useful though.
		Personally, I really didn&apos;t.
		As far as I can tell, virtual reality is just an enhanced version of audio/video technology.
		It&apos;s a novelty, and I strongly suspect it&apos;ll become very widespread, given time.
		Don&apos;t get me wrong, audio/video technology in all its forms, including virtual reality, can still serve useful functions.
		Those functions just aren&apos;t specific to virtual reality.
	</p>
	<p>
		Surprisingly, when I did some research, I found some niche uses for which virtual reality actually does seem to be an improvement over other technology.
		The one that really stood out to me was its use in medicine.
		Doctors are using virtual reality to distract patients from pain!
		For example, during a tooth extraction, a patient may be equipped with a virtual reality headset, and while they focus on what they&apos;re seeing and hearing, they&apos;re not focusing on the pain (Garbade, 2018).
		The human brain is incredibly limited.
		Much more limited than most people seem to realise.
		It can&apos;t process too much input at once.
		If there&apos;s too much to take in, the brain will discard a bunch of it.
		It&apos;s a proven medical fact that you feel less pain when you&apos;re thinking about something other than the pain, because feeling pain takes effort from the brain.
		It&apos;s like giving a computer too many tasks.
		Maybe a game you&apos;re playing will drop a bunch of frames while you&apos;re also running a Bitcoin miner on the same machine.
		An in the brain, it can be pain signals that get dropped instead of graphical frames.
	</p>
	<div class="APA_references">
		<h3>References:</h3>
		<p>
			Garbade, M. (2018, November 8). <a href="https://readwrite.com/2018/11/08/10-amazing-uses-of-virtual-reality/">10 Amazing Uses of Virtual Reality</a>. Retrieved from <code>https://readwrite.com/2018/11/08/10-amazing-uses-of-virtual-reality/</code>
		</p>
	</div>
</section>
<section id="Unit6">
	<h2>Unit 6</h2>
	<p>
		This week&apos;s learning journal assignment says to do a Google search on Vint Cerf.
		I&apos;d understand if it said to do a Web search - y&apos;know, using any search engine of choice - but it specifically says to use the Google search engine.
		This is an absolutely asinine stipulation.
		It&apos;s not something I can do, either.
		As shown in the screenshot below, the Google search engine blocks me:
	</p>
	<img src="/img/CC_BY-SA_4.0/y.st./coursework/CS4404/Google.png" alt="Google blocks me" class="framed-centred-image" width="442" height="380"/>
	<p>
		Maybe try loosening up the requirements next time and not require use of a specific search engine?
		That said, the search has nothing to do with the writing of the assignment, as we&apos;re supposed to write about a speech of his that was uploaded to the university&apos;s server, so I&apos;m not sure why we were asked to run that search anyway.
	</p>
	<p>
		I was sceptical as to what Cerf would have to say, given that we were told that he&apos;s an evangelist for Google, the evil corporation that tries to eliminate user privacy so they can sell our data to their real customers, the advertisers.
		However, in his comments on cloud computing, he makes some interesting points.
		He first discusses how the layered system of the Internet allows any layer to be swapped out as long as the interfaces between the layers stays the same (Cerf, 2009).
		Clearly, what he&apos;s referencing here is the power of <abbr title="application programming interface">API</abbr>s.
		The implementations can change, as long as the interfaces don&apos;t.
		The <abbr title="application programming interface">API</abbr>s of the Internet&apos;s layered architecture have allowed for updates to the implementations that would otherwise be incredibly difficult.
		Next, he discusses the proprietary networks of old, and how they unconnected.
		Like islands in a vast sea, they were separate.
		As they had no way to even express the idea of another network, they had no hope of doing something such as <strong>*connecting*</strong> to another network.
		Such thoughts would probably have been thought ludicrous, back in the days before the Internet.
		And then, he took the concept somewhere I didn&apos;t expect: applying that same logic to clouds.
		Clouds are proprietary and disjointed.
		He proposed that perhaps, they could be connected, just like the proprietary networks merge to form the Internet as a whole these days.
		He discussed some obvious concerns, such as how authorisation and data retrieval between clouds would work.
		The idea was to get people thinking, not to yet propose any solutions.
		This seems rather useful.
		If you haven&apos;t picked up on it already, I distrust the proprietary clouds entirely, but solutions such as ownCloud exist, which I do trust, and it could be useful to connect to data people on proprietary clouds want to share, or share data with said people on proprietary clouds.
		Furthermore, even without trustworthy, non-proprietary solutions, interconnecting the clouds would greatly reduce vendor lock-in, which is always a good thing.
		It&apos;d mean not being permanently chained to a single cloud provider based on who you need to share data with, and having multiple cloud accounts to share data with everyone you need to.
		From one cloud account, hosted with any provider, you could share with anyone you need to.
		Evangelist for Google or not, Vint Cerf&apos;s idea here would reduce the need for anyone to have a Google account and use Google&apos;s cloud.
		Though that said, it&apos;d also allow people to use Google cloud accounts in more places.
		It wouldn&apos;t push people away from Google cloud storage by any means, it&apos;d just eliminate one reason people might feel forced to use Google.
		Imagine being able to download a shared file from Google&apos;s Drive cloud to your own ownCloud instance instead of needing to download it to your local machine then re-upload it to your ownCloud instance, for example.
		The possibilities are interesting, to say the least.
	</p>
	<div class="APA_references">
		<h3>References:</h3>
		<p>
			Cerf, V. (2009, April 28). <a href="https://my.uopeople.edu/pluginfile.php/590938/mod_book/chapter/208650/6%20-%20Vint%20Cerf%20Cloud%20Comments.docx">Cloud Computing and the Internet</a>. Retrieved from <code>https://my.uopeople.edu/pluginfile.php/590938/mod_book/chapter/208650/6%20-%20Vint%20Cerf%20Cloud%20Comments.docx</code>
		</p>
	</div>
</section>
<section id="Unit7">
	<h2>Unit 7</h2>
	<p>
		...
	</p>
</section>
<section id="Unit8">
	<h2>Unit 8</h2>
	<p>
		...
	</p>
</section>
		<hr/>
		<p>
			Copyright Â© 2019-2020 Alex Yst;
			You may modify and/or redistribute this document under the terms of the <a rel="license" href="/license/gpl-3.0-standalone.xhtml"><abbr title="GNU&apos;s Not Unix">GNU</abbr> <abbr title="General Public License version Three or later">GPLv3+</abbr></a>.
			If for some reason you would prefer to modify and/or distribute this document under other free copyleft terms, please ask me via email.
			My address is in the source comments near the top of this document.
			This license also applies to embedded content such as images.
			For more information on that, see <a href="/en/a/licensing.xhtml">licensing</a>.
		</p>
		<p>
			<abbr title="World Wide Web Consortium">W3C</abbr> standards are important.
			This document conforms to the <a href="https://validator.w3.org./nu/?doc=https%3A%2F%2Fy.st.%2F%5BTEMP%5D%2F%5BTEMP%5D.xhtml"><abbr title="Extensible Hypertext Markup Language">XHTML</abbr> 5.2</a> specification and uses style sheets that conform to the <a href="http://jigsaw.w3.org./css-validator/validator?uri=https%3A%2F%2Fy.st.%2F%5BTEMP%5D%2F%5BTEMP%5D.xhtml"><abbr title="Cascading Style Sheets">CSS</abbr>3</a> specification.
		</p>
	</body>
</html>

