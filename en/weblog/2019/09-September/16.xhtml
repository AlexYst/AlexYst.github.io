<?xml version="1.0" encoding="utf-8"?>
<!--
                                                                                     
 h       t     t                ::       /     /                     t             / 
 h       t     t                ::      //    //                     t            // 
 h     ttttt ttttt ppppp sssss         //    //  y   y       sssss ttttt         //  
 hhhh    t     t   p   p s            //    //   y   y       s       t          //   
 h  hh   t     t   ppppp sssss       //    //    yyyyy       sssss   t         //    
 h   h   t     t   p         s  ::   /     /         y  ..       s   t    ..   /     
 h   h   t     t   p     sssss  ::   /     /     yyyyy  ..   sssss   t    ..   /     
                                                                                     
	<https://y.st./>
	Copyright Â© 2019 Alex Yst <mailto:copyright@y.st>

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program. If not, see <https://www.gnu.org./licenses/>.
-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<base href="https://y.st./en/weblog/2019/09-September/16.xhtml"/>
		<title>A working prototype &lt;https://y.st./en/weblog/2019/09-September/16.xhtml&gt;</title>
		<link rel="icon" type="image/png" href="/link/CC_BY-SA_4.0/y.st./icon.png"/>
		<link rel="stylesheet" type="text/css" href="/link/main.css"/>
		<script type="text/javascript" src="/script/javascript.js"/>
		<meta name="viewport" content="width=device-width"/>
	</head>
	<body>
<nav>
	<p>
		<a href="/en/coursework/">Coursework</a> |
		<a href="/en/take-down/">Take-down requests</a> |
		<a href="/en/">Home</a> |
		<a href="/en/a/about.xhtml">About</a> |
		<a href="/en/a/contact.xhtml">Contact</a> |
		<a href="/a/canary.txt">Canary</a> |
		<a href="/en/URI_research/"><abbr title="Uniform Resource Identifier">URI</abbr> research</a> |
		<a href="/en/opinion/">Opinions</a> |
		<a href="/en/law/">Law</a> |
		<a href="/en/recipe/">Recipes</a> |
		<a href="/en/a/links.xhtml">Links</a> |
		<a href="/en/weblog/2019/09-September/16.xhtml.asc">{this page}.asc</a>
	</p>
	<hr/>
	<p>
		Weblog index:
		<a href="/en/weblog/memories">Memories</a> |
		<a href="/en/weblog/"><abbr title="American Standard Code for Information Interchange">ASCII</abbr> calendars</a> |
		<a href="/en/weblog/index_ol_ascending.xhtml">Ascending list</a> |
		<a href="/en/weblog/index_ol_descending.xhtml">Descending list</a>
	</p>
	<hr/>
	<p>
		Jump to entry:
		<a href="/en/weblog/2015/03-March/07.xhtml">&lt;&lt;First</a>
		<a rel="prev" href="/en/weblog/2019/09-September/15.xhtml">&lt;Previous</a>
		<a rel="next" href="/en/weblog/2019/09-September/17.xhtml">Next&gt;</a>
		<a href="/en/weblog/latest.xhtml">Latest&gt;&gt;</a>
			</p>
			<hr/>
</nav>
		<header>
			<h1>A working prototype</h1>
			<p>Day 01654: <time>Monday, 2019 September 16</time></p>
		</header>
<img src="/img/CC_BY-SA_4.0/y.st./weblog/2019/09/16.jpg" alt="Ivy growing on a chain-link fence and a nearby tree" class="framed-centred-image" width="800" height="480"/>
<section id="diet">
	<h2>Dietary intake</h2>
	<p>
		For breakfast, I had 140 grams of muffuletta.
		I got thoroughly distracted by Minetest though and ended up skipping lunch.
		I haven&apos;t played an actual for-fun game of Minetest in what feels like ages until today.
		Instead of lunch, I had 348 grams of pretzels.
		For dinner, I had another 265 grams of muffuletta.
	</p>
</section>
<section id="swimming">
	<h2>Swimming lessons</h2>
	<p>
		I told my workmate they didn&apos;t have to teach me, as our schedules just don&apos;t line up well.
		I mean, especially when you take into account the hours of the pool.
		We both have Thursdays off, though I need to be back home by about 17:00 to give myself time to rest, then bike out to the <abbr title="Eugene Unix &amp; GNU/Linux User Group">EUGLUG</abbr> meeting.
		However, the pool isn&apos;t open on Thursdays.
		Why is the pool not open on Thursdays?
		They&apos;re also not open on Tuesdays for some reason.
		Their only hours that even might be before noon are on Mondays and Wednesdays.
		This country uses that stupid 12-hour clock system though, and only the closing hours are labelled as being <abbr title="post meridiem">p.m.</abbr>.
		We&apos;re assuming the opening hours are <abbr title="ante meridiem">a.m.</abbr>, both because they&apos;d be within normal waking hours and because otherwise, the pool is only open for an hour and a half on those days, which would be really stupid.
		But then again, the pool&apos;s only open for four hours on two days and five hours on one day.
		If the pool is open for thirteen and a half hours on these two days, it&apos;d be a drastic difference from their schedule on the other days.
		I figured this wasn&apos;t going to work out, and I was fine with that.
		I&apos;d get swimming lessons later from an actual instructor.
		I just needed to get my voice fixed first, as I don&apos;t really want to meet new people until I do.
	</p>
	<p>
		However, my workmate came up with a different plan.
		They&apos;re going to give me partial instructions on Wednesday morning.
		We&apos;ll meet at work at 08:00, then bike to the pool, which is an hour away.
		There&apos;s a closer pool, which I mentioned to my workmate before, but it&apos;s closed for the time being and we&apos;d need to wait.
		I&apos;d actually recommended waiting, but they were fine biking to the more-distant pool.
		Once we&apos;re there and they&apos;ve shown me how to get started, they&apos;ve got to leave for their evening shift, and I&apos;ll stay and practice.
		It looks like we&apos;re actually going to get this done.
		I worry the pool won&apos;t actually be open though.
		We might be biking there for nothing.
		I mean, I need the exercise for sure, but this might be a waste of my workmate&apos;s time.
	</p>
</section>
<section id="Minetest">
	<h2>Minetest</h2>
	<img src="/img/CC_BY-SA_3.0/minetest.net./weblog/2019/09/16.png" alt="The view from my landing spot after having first spawned into the new world slightly int the air" class="framed-centred-image" width="1033" height="600"/>
	<p>
		I&apos;ve now got the back end for the storage system operational.
		It was a lot trickier to implement than I thought it would be.
		Basically, i had two Minetest glitches to work around.
		Well, one of them&apos;s definitely a glitch, but the other might just be a poorly-thought-out but intended feature.
		For the might-be-a-bug issue, you can swap stacks between inventories if you know what you&apos;re doing, and bypass normal restrictions.
		If you&apos;re allowed to put items into an inventory, you can put them right on top of another stack, which swaps that stack into your inventory even if you wouldn&apos;t normally be allowed to take that stack.
		Likewise, if you&apos;re allowed to take a stack, you can take a stack and place it on top of one you have in your own inventory, and that&apos;ll swap it into the other inventory, even if you wouldn&apos;t normally be allowed to deposit that stack.
		There are callback functions to determine what is allowed to be deposited and what is allowed to be withdrawn, but only one of them is ever called, so when swapping, you can bypass whichever of the functions you don&apos;t trigger.
		The behaviour is consistent too, so by using the steps above, you choose which function to trigger and which to bypass.
	</p>
	<p>
		For the definitely-a-bug issue, we have another stack swap glitch.
		This time though, take half of a stack and try to swap it with another stack.
		In addition to the normal bypass and the fact that the two whole stacks get swapped, no partial stacks, the function that gets triggered after the swap will be given invalid information.
		This function is able to see how many of an item the player took, except that when you trigger this glitch through trying to swap half a stack with a separate stack, instead of the whole stack being reported as taken, only the part the player pretended to be taking gets reported.
		Until I wrote code to work around this bug, duplication of elemental items was painfully easy.
		The fix was simple enough, though it took a bit of time to get right.
		Basically, I just needed to assume the full stack had been taken, because it had, any time a swap occurred.
		Of course, I didn&apos;t have access to the stack size, so the stack size has to be calculated.
		That only works because of how controlled the inventory stack are for these nodes.
		For other nodes, this strategy wouldn&apos;t work at all.
	</p>
	<p>
		With the main functionality of the <code>elemental</code> mod built, I started up a new world and began preparing the land for construction.
		I quickly ran into a problem though.
		On <a href="/en/domains/taylor.local.xhtml"><code>taylor</code></a>&apos;s asinine one-button mouse, it&apos;s way too easy to place nodes where you don&apos;t want them.
		In this case, I&apos;d placed some marram grass right on top of a fern when trying to dig up the fern, and ended up destroying the fern entirely.
		I hadn&apos;t even intentionally placed a single node yet, and I&apos;d already destroyed a node of which there are a finite number of in the game.
		I&apos;d already planned to build a mod that tweaks some things and removed this annoyance, but I&apos;d forgotten to do so.
		Well, I actually <strong>*did*</strong> build the mod, but now it seems to be missing.
		I forgot to find or remake it and install it in the new world though.
		And on <code>taylor</code>, it seems this mod isn&apos;t simply an ease-of-life thing, but an actual necessity for preventing frequent problems.
		So I rebuilt the mod, now also with a feature to disable falling nodes.
		I just don&apos;t want to deal with them, especially while also dealing with <code>taylor</code>&apos;s obnoxious hardware.
	</p>
	<p>
		I mentioned previously thinking about naming the Sleepless Isle of my new world Snow Haven or Sand haven instead.
		I&apos;d forgotten that I&apos;d already decided to save the name Sand Haven for a former sandstone desert after I eventually clear one out.
		So Snow Haven it is.
		I&apos;m not going to bother with the level-display interface this time.
		I don&apos;t even know what I did with that mod.
		It was a distraction though, anyway.
		And now, there&apos;s something else to work toward as far as mining and farming are concerned.
		I&apos;d like to build a circle of elemental crystals, one of each type, around the spawn point.
		I think that&apos;d look pretty neat.
		Getting some of these crystals - in particular, the coral skeleton crystal - is going to be a pain though.
		I&apos;m planning to build a mod that adds the amount more you need of each element to get a crystal to a menu tab as well.
		I won&apos;t need that for now though, so I&apos;m putting off building it.
		The remnant system of <code>elemental</code> is of higher priority.
	</p>
	<p>
		The concept of the remnant system has some interesting quirks though.
		Of particular interest to me is group-based recipes.
		Take the vessels shelf, for example.
		To craft it, you need to include three vessels of any type.
		Two of those are interchangeable, as far as the remnant system is concerned.
		They&apos;re each made with half a glass node, basically.
		However, the third vessel is made from an iron ingot.
		That means a vessels shelf might contain a sand node and a half, it might contain three steel ingots, or it might contain something in between.
		To simplify things, the remnant system drains all possible material from the item.
		You can&apos;t drain out one ingot, for example, and leave the other two vessels to be drained of either sand or ingots later.
		However, there&apos;s no way to know which element should be drained form the shelf, as there&apos;s no way to know which element (or elements) is (or are) in the shelf.
		That means you could craft the shelf using three steel vessels, but drain the shelf of one and a half sand.
		You can convert one element to another using odd items such as this.
		Also, two iron appear to be worth one sand, as we can see here.
		Iron is what I consider to be the most-valuable material in the game.
		Yet to increase my stats, which are more important than any material, it seems I&apos;m very likely to sacrifice all of (or much of) my iron to get more sand.
		Also of note, draining a shelf of iron and draining a shelf of sand can&apos;t produce the same item.
		That&apos;s because when draining of sand, a void the size of one and a half elemental items is left, but when draining an item of iron, a void the size of three elemental items is left.
		Two different shelf types will be available for each element, aside form sand and iron, which each get one (you drain the shelf of one of the two, then insert the other one).
	</p>
	<p>
		I was thinking that the remnant system would have two main function calls.
		One would register an item to be drained, what element could be drained from it, and a remnant version, along with the quantity of the element to be acquired and a multiple of the item that has to be drained at once (so you aren&apos;t left with fractional element counts from multiple-output recipes)
		The other would register a remnant, the re-element-ed version, the element you add to get it, the same quantity value you gave the other registration function, and the and the same multiple you gave the other registration function.
		However, the draining and re-element-ing processes are meant to be inverses.
		It&apos;d be easier for the system itself if it wasn&apos;t having to check two tables of possibilities every time you try to put an item into the crystal.
		Basically, the re-element-ing process in just like the de-element-ing process, but with a negative quantity value.
		More importantly though, bot the forward and reverse process should be added to the table every time one of these options gets registered.
		With that in mind, we don&apos;t need a second registration function, nor do modders need to use a negative number when registering a re-element-ed item.
		They just need to register the re-element-ed item as if it was a craftable item, and with the remnant item as the result for draining said item.
		The <abbr title="application programming interface">API</abbr>&apos;s implementation should take care of the rest automatically.
		If it doesn&apos;t, I&apos;ve done something wrong.
	</p>
	<p>
		I have a tendency to misplace mods or delete them on a whim if I decide they aren&apos;t going to turn out well, so to avoid that issue, I&apos;ve uploaded the code so far to my NotABug account.
		I don&apos;t want to lose this mod.
		However, in the code I&apos;ve uploaded, I&apos;ve deliberately omitted support for the blueberry, blueberry bush, ice, and pine bush elements.
		If someone wanted to add support for those elements, it&apos;d be incredibly easy, given what I&apos;ve written so far.
		The easy way - and what I intend to do later - would be to replace the elements 26 through 29 with the new elements to be added, replace element 30 (currently set to a placeholder version of ice) with some other placeholder (to prevent odd issues with there being two ice elements), and change the line <code>if to_index[element] and to_index[element] &lt; 26</code> to <code>if to_index[element] and to_index[element] &lt; 30</code> to allow these four palette indexes to be used for nodes automatically granted to players.
		From there, it&apos;d make sense to update the palette image so these elements had sensible colours for their new item assignments, but that wouldn&apos;t even be strictly necessary.
		If you want to roll your own version of the mod, every thing you need if you want to include the newest elements is right there.
		However, if someone that doesn&apos;t want to manually edit the code decides to download this (assuming they even notice it, which is unlikely as I won&apos;t be posting about it on the Minetest forum until it&apos;s in a more-complete state), they&apos;ll need to update to a version with the external <abbr title="application programming interface">API</abbr> if they want these four elements supported, as I&apos;ll hold off on adding support for these elements until I&apos;ve gotten the external <abbr title="application programming interface">API</abbr> built.
		With that, the external <abbr title="application programming interface">API</abbr> will appear to have been there all along, as far as players are concerned.
	</p>
</section>
<section id="shoes">
	<h2>Work shoes</h2>
	<p>
		I mentioned in a previous entry that because someone at work stole my work shoes, I had to go out and buy new ones.
		I don&apos;t think I actually wore them that day though.
		I might have had the day off.
		In any case, I wasn&apos;t thinking of how they felt when I wore them, and probably hadn&apos;t worn them for any extended period of time.
		I&apos;ve been meaning to write about that since, but I keep forgetting.
		I&apos;m not thinking about my work shoes when I&apos;m not stuck wearing them, and I&apos;m not stuck wearing them when I write my journal entries.
		In any case, they really hurt.
		They dug into my ankles so badly that one day, I wore them all day with the back of the shoes folded down under my heels just so they couldn&apos;t reach and dig into my heels any more.
		Of course, that didn&apos;t work out well either.
		By the end of the day, my heels felt like they were blistering really badly.
		I couldn&apos;t actually find any visible blisters, but it certainly <strong>*felt*</strong> like they were there.
	</p>
	<p>
		The shoes are starting to hurt less as I break them in though.
		They&apos;re not digging into my ankles quite as badly.
		I still have painful red lines on both ankles, but those should heal soon, I hope.
	</p>
</section>
<section id="counterfeit">
	<h2>Counterfeit bills</h2>
	<p>
		Last night, a workmate asked if we could take hundred-dollar bills.
		I asked if they knew how to check for counterfeit ones.
		They asked me how to check, so I started to show them on the bill the customer had handed them, only to find that the bill didn&apos;t seem right.
		The funny strip specific to hundred-dollar bills in my country was off, for starters.
		Instead of weaving in and out of the bill, it just stopped at the points it was supposed to go under the paper, and was actually peeling out at one of those spots.
		Another thing I check for is the <abbr title="digital restrictions management">DRM</abbr> circles.
		I&apos;m highly opposed to <abbr title="digital restrictions management">DRM</abbr>, even for use in preventing counterfeit, but most printers (or maybe it was scanners, I forget) have a feature that&apos;ll prevent printing (or maybe scanning) if a certain arrangement of circles is detected.
		Multiple countries work this pattern into their bills in an attempt to prevent duplication.
		In my country, the circles are disguised as zeroes and made a part of a splattering of multiple tiny copies of the bill value.
		&quot;05&quot;, &quot;10&quot;, &quot;20&quot;, &quot;50&quot;, &quot;100&quot; ...
		The one-dollar bills lack them, and I think the two-dollar bills do too.
		Anything larger has these stupid <abbr title="digital restrictions management">DRM</abbr> circles though, so since I know about them, I check for them.
		The circles on this bill didn&apos;t seem right though, and just looking at a detail so small in size made me notice that the printing of the entire bill seemed off.
		I can&apos;t describe exactly what the problem was, but it looked like a lower-quality printer had been used than the ones used to produce the legal tender.
		I told the customer it was a fake, and they asked if we had one of those counterfeit-detection pens.
		I thought we did, but couldn&apos;t find it, and sent someone else to ask the head manager about it.
		It seems we don&apos;t have a pen, but the head manager checked the ink used to print the denomination of the bill in the corner, which is apparently supposed to appear to be a different colour depending on what angle you look at it, and that ink was wrong as well.
		I thought that&apos;d be the end of it.
	</p>
	<p>
		Today though, I found notes on both registers telling the cashiers to watch for fake hundreds.
		I guess the head manager thinks counterfeits come in waves or something, so we&apos;re more likely to see more for a while.
		Maybe they <em>*do*</em> come in waves?
		I mean, if someone just printed a batch of them, parts of that new batch are likely to come in contact with the store as other people get unknowingly ripped off and take the hundreds as payment.
		Or maybe the issue is that the customer that brought that faux bill is the counterfeiter and will try hitting us again?
		I don&apos;t know.
		But anyway, it seems we&apos;re on alert for them now.
	</p>
</section>
		<hr/>
		<p>
			Copyright Â© 2019 Alex Yst;
			You may modify and/or redistribute this document under the terms of the <a rel="license" href="/license/gpl-3.0-standalone.xhtml"><abbr title="GNU&apos;s Not Unix">GNU</abbr> <abbr title="General Public License version Three or later">GPLv3+</abbr></a>.
			If for some reason you would prefer to modify and/or distribute this document under other free copyleft terms, please ask me via email.
			My address is in the source comments near the top of this document.
			This license also applies to embedded content such as images.
			For more information on that, see <a href="/en/a/licensing.xhtml">licensing</a>.
		</p>
		<p>
			<abbr title="World Wide Web Consortium">W3C</abbr> standards are important.
			This document conforms to the <a href="https://validator.w3.org./nu/?doc=https%3A%2F%2Fy.st.%2Fen%2Fweblog%2F2019%2F09-September%2F16.xhtml"><abbr title="Extensible Hypertext Markup Language">XHTML</abbr> 5.2</a> specification and uses style sheets that conform to the <a href="http://jigsaw.w3.org./css-validator/validator?uri=https%3A%2F%2Fy.st.%2Fen%2Fweblog%2F2019%2F09-September%2F16.xhtml"><abbr title="Cascading Style Sheets">CSS</abbr>3</a> specification.
		</p>
	</body>
</html>

